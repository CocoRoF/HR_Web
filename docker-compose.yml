version: "3.7"

services:
  web:
    container_name: web
    env_file: ./backend/web/.env
    build: ./backend/web/.
    volumes:
      - ./backend/web:/code/
      - static_volume:/code/staticfiles/
    stdin_open: true
    tty: true
    command: gunicorn -c gunicorn_config.py config.wsgi:application
    networks:
      - backend_network
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - db

  backend-server:
    container_name: nginx-back
    build: ./backend/nginx/.
    volumes:
      - static_volume:/code/staticfiles/ 
    ports:
      - "8080:80"
    depends_on:
      - web
    networks:
      - backend_network

  db:
    container_name: db
    build: ./mariadb
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    env_file: ./mariadb/.env
    environment:
      TZ: 'Asia/Seoul'
    volumes:
      - ./mariadb/volume:/var/lib/mysql
      - ./mariadb/sql:/docker-entrypoint-initdb.d
    networks:
      - backend_network
    restart: always
  
  web-front:
    image: node:latest
    volumes:
      - ./frontend/web-front:/home/app/frontend
    ports:
      - 3000:3000
    working_dir: /home/app/frontend
    environment:
      - NODE_ENV=development
    command: [sh, -c, npm run dev]
    networks:
      - frontend_network

  frontend-server:
    container_name: nginx-front
    build:
      context: ./frontend/nginx/.
    ports:
      - "80:80"
    depends_on:
      - web-front
    networks:
      - frontend_network
    
networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge

volumes:
  static_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./backend/web/staticfiles